[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui, render\nfrom shinywidgets import render_plotly\nfrom palmerpenguins import load_penguins\nfrom shinywidgets import output_widget, render_widget, render_plotly\nimport seaborn as sns\nfrom shiny import render\nimport palmerpenguins\nfrom shiny import reactive\n\n\npenguins_df = load_penguins()\n\n# Set the Page Options with the title \nui.page_opts(title=\"Mahesh Bashyal Penguin project\", fillable=True)\n\n# Add a Shiny UI sidebar for user interaction\nwith ui.sidebar():\n# Use the ui.h2() function to add a 2nd level header to the sidebar\n    ui.h2(\"Sidebar\")\n    \n \nui.input_selectize(\"selected_attribute\",\"Penguin's features\",\n                      [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"])\n\n# Use ui.input_numeric() to create a numeric input for the number of Plotly histogram bins\nui.input_numeric(\"plotly_bin_count\", \"number of bins\",0)\n\n# Use ui.input_slider() to create a slider input for the number of Seaborn bins\nui.input_slider(\"seaborn_bin_count\",\"Choose number of bars\",0,100,20)\n\n# Use ui.input_checkbox_group() to create a checkbox group input to filter the species\nui.input_checkbox_group(\"selected_species_list\",\"Species\",\n                           [\"Adelie\", \"Gentoo\", \"Chinstrap\"],selected=[\"Adelie\"],inline=True)\n# Use ui.hr() to add a horizontal rule to the sidebar\nui.hr() \n\n# Use ui.a() to add a hyperlink to the sidebar\nui.a(\"GitHub\",href=\"https://github.com/Mahesh1416/cintel-02-data/tree/main\",target= \"_blank\") #to add a hyperlink to the sidebar\n\nwith ui.layout_columns():\n\n    # New data table Using Filtered Data    \n    with ui.card():\n        \"Penguins Data Table\"\n        @render.data_frame\n        def data_table():\n            return render.DataTable(filtered_data())\n\n    # Display data Grid Using Filtered Data    \n    with ui.card():\n        \"Penguins Data Grid\"\n        @render.data_frame\n        def data_grid():\n            return render.DataGrid(filtered_data())\n\nwith ui.layout_columns():\n    \n    # Plotly Histogram    \n    with ui.card():\n        ui.card_header(\"Plotly Histogram\")\n        @render_plotly\n        def plotlyhistogram():\n            return px.histogram(\n                filtered_data(),\n                x=input.selected_attribute(),\n                nbins=input.plotly_bin_count(),\n                color=\"species\"\n            ).update_layout(\n                xaxis_title=\"Bill length (mm)\",\n                yaxis_title=\"Counts\"\n            )\n            \n    # Seaborn Histogram    \n    with ui.card():\n        ui.card_header(\"Seaborn Histogram\")\n       \n        @render.plot\n        def seabornhistogram():\n            ax=sns.histplot(\n                data=filtered_data(), \n                x=input.selected_attribute(), \n                bins=input.seaborn_bin_count(),\n               )\n            ax.set_title(\"Palmer Penguins\")\n            ax.set_xlabel(input.selected_attribute())\n            ax.set_ylabel(\"Number\")\n            return ax\n           \n    # Plotly Scatterplot\n    with ui.card(full_screen=True):\n        ui.card_header(\"Plotly Scatterplot: Species\")\n        @render_plotly\n        def plotly_scatterplot():\n            return px.scatter(\n                filtered_data(),\n                x=\"body_mass_g\",\n                y=\"bill_depth_mm\",\n                color=\"species\",\n                 labels={\n                        \"bill_length_mm\": \"Bill Length (mm)\",\n                        \"body_mass_g\": \"Body Mass (g)\",\n                    },\n                    size_max=8, # set the maximum marker size\n                )\n\n\n@reactive.calc\ndef filtered_data():\n    selected_species = input.selected_species_list()\n    if selected_species:\n        return penguins_df[penguins_df['species'].isin(selected_species)]\n    return penguins_df\n", "type": "text"}]